name: Publish on GitHub Packages

on:
  push:
    branches:
    - release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Popolate Env
      env:
        PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      run: echo $GITHUB_ACTOR
    - name: Configure GPG Key
      run: |
        mkdir -p ~/.gnupg/
        printf "$GPG_SIGNING_KEY" | base64 --decode > ~/.gnupg/private.key
        gpg --import --batch ~/.gnupg/private.key
      env:
        GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
    - name: Publish with Gradle
      env:
        PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      run: ./gradlew publish -Psigning.password=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} -Psigning.keyId=F6113733 -Psigning.secretKeyRingFile=/home/runner/.gnupg/private.key -Dorg.gradle.jvmargs="-Xms512M -Xmx4G"
    - name: Build Docker image
      run: ./gradlew ar4kDockerContainerDruido -Psigning.password=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} -Psigning.keyId=F6113733 -Psigning.secretKeyRingFile=/home/runner/.gnupg/private.key -Dorg.gradle.jvmargs="-Xms512M -Xmx4G"
    - name: Log into GitHub registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
    - name: Push image on GitHub
      run: |
        IMAGE_NAME=org.ar4k.agent/ar4k-agent-druido
        IMAGE_ID=docker.pkg.github.com/rossonet/edgeagentar4k/ar4k-agent-druido
        VERSION=latest
        ACTUAL=$(docker images --format "{{.Tag}}:{{.Repository}}" | grep ar4k-agent-druido | cut -f1 -d:)
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $IMAGE_NAME:$ACTUAL $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
    - name: Logout from GitHub
      run: docker logout docker.pkg.github.com
